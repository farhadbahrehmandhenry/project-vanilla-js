/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ (() => {

eval("var addBtn = document.querySelector('.add-button');\nvar addBtnContaier = document.querySelector('.add-button-container');\nvar card = document.querySelector('.card');\nvar favoriteBtn = document.querySelector('.favorite-bth');\nvar mainContainer = document.querySelector('.main-container');\nvar favoritesContainer = document.querySelector('.favorite-container');\nvar mainNavigation = document.querySelector('.main-navigation');\nvar favoriteNavigation = document.querySelector('.favorite-navigation');\nvar backBtn = document.querySelector('.back-btn');\nvar resultsContainer = document.querySelector('.results-container');\nvar loader = document.querySelector('.loader');\nvar loadMoreBtn = document.querySelector('.load-more-btn');\n\nwindow.addEventListener('DOMContentLoaded', async() => {\n  var apiKey = 'DEMO_KEY';\n  var count = 10;\n  var url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=${count}`;\n\n  localStorage.getItem('mainCards') !== null ? getPhotosFromLocalStorage() : await getPhotosFromAPI();\n\n  function renderCards(cards, parentEl) {\n    parentEl.innerHTML = '';\n    var icon = parentEl === mainContainer ? '+' : 'X';\n    var title = parentEl === mainContainer ? 'ADD TO FAVORITES' : 'REMOVE FROM FAVORITES';\n\n    cards.forEach((card, index) => {\n      var cardElement = document.createElement('div');\n      var imageAncherElement = document.createElement('a');\n      var imageElement = document.createElement('img');\n      var titleElement = document.createElement('h3');\n      var descriptionElement = document.createElement('div');\n      var descriptionP = document.createElement('p');\n      var addBtnContainer = document.createElement('div');\n      var addBtnElement = document.createElement('button');\n\n      cardElement.className = 'card';\n      titleElement.className = 'title';\n      descriptionElement.className = 'description';\n      addBtnContainer.className = 'add-button-container';\n      addBtnElement.className = 'add-button';\n      addBtnElement.setAttribute('data-index', index);\n      descriptionP.className = 'truncate';\n      imageElement.className = 'image';\n      titleElement.innerText = card.title;\n      imageElement.src = card.url;\n      descriptionP.innerText = card.explanation.replace(/[\\r\\n]/gm, '');\n      addBtnElement.title = title;\n      addBtnElement.innerText = icon;\n      imageAncherElement.setAttribute('target', '_blank');\n      imageAncherElement.href = card.hdurl;\n      descriptionElement.title = card.explanation;\n\n      if (card.favorite) {\n        addBtnContainer.classList.add('added');\n      }\n\n      imageAncherElement.appendChild(imageElement);\n      descriptionElement.appendChild(descriptionP);\n      addBtnContainer.appendChild(addBtnElement);\n      cardElement.appendChild(imageAncherElement);\n      cardElement.appendChild(titleElement);\n      cardElement.appendChild(descriptionElement);\n      cardElement.appendChild(addBtnContainer);\n      parentEl.appendChild(cardElement);\n\n      addBtnElement.addEventListener('click', (e) => {\n        var mainCards = JSON.parse(localStorage.getItem('mainCards'));\n        var favoriteCards = localStorage.getItem('favoriteCards') !== null ? JSON.parse(localStorage.getItem('favoriteCards')) : [];\n        var updatedMainCards;\n\n        if (addBtnElement.parentElement.classList.contains('added')) {\n          addBtnElement.parentElement.classList.remove('added');\n\n          if (favoriteCards.some(c => c.title === card.title)) {\n            var newFavorites = favoriteCards.filter(c => c.title !== card.title);\n            localStorage.setItem('favoriteCards', JSON.stringify(newFavorites));   \n\n            renderCards(newFavorites, favoritesContainer);\n          }\n\n          updatedMainCards = mainCards.map(c => {\n            if (c.title === card.title) {\n              c.favorite = false;\n            }\n  \n            return c;\n          });\n\n          renderCards(updatedMainCards, mainContainer);\n        }\n        else {\n          addBtnElement.parentElement.classList.add('added');\n\n          updatedMainCards = mainCards.map(c => {\n            if (c.title === card.title) {\n              c.favorite = true;\n            }\n  \n            return c;\n          });\n\n          if (!favoriteCards.some(c => c.title === card.title)) {\n            favoriteCards.push(card);\n            localStorage.setItem('favoriteCards', JSON.stringify(favoriteCards));   \n          }\n          else {\n            var newFavorites = favoriteCards.filter(c => c.title !== card.title);\n            localStorage.setItem('favoriteCards', JSON.stringify(newFavorites));   \n\n            updatedMainCards = mainCards.map((c, index) => {\n              if (c.title === card.title) {\n                c.favorite = false;\n\n                var selecteCards = document.querySelectorAll(`[data-index=\"${index}\"]`);\n\n                console.log(selecteCards)\n                selecteCards.forEach(c => {\n                  c.parentElement.classList.remove('added');\n                })\n              }\n    \n              return c;\n            });\n\n            renderCards(newFavorites, favoritesContainer);\n            renderCards(updatedMainCards, mainContainer);\n          }\n        }\n\n        localStorage.setItem('mainCards', JSON.stringify(updatedMainCards));   \n        renderCards(updatedMainCards, mainContainer);\n\n        e.stopPropagation();\n      });\n\n      cardElement.addEventListener('mousedown', (e) => {\n        var activeCard = (e.target.classList.contains('add-button-container') || e.target.classList.contains('add-button'));\n      \n        if (!activeCard && e.target.classList.contains('image')) {\n          cardElement.classList.add('active');\n        }\n      });\n      \n      cardElement.addEventListener('mouseup', (e) => {\n        var activeCard = e.target.classList.contains('add-button-container') || e.target.classList.contains('add-button')\n      \n        if (!activeCard && e.target.classList.contains('image')) {\n          cardElement.classList.remove('active');\n        }\n      });\n    });\n  }\n\n  function getPhotosFromLocalStorage() {\n    renderCards(JSON.parse(localStorage.getItem('mainCards')), mainContainer);\n  }\n  \n  async function getPhotosFromAPI() {\n    resultsContainer.style.display = 'none';\n    loader.style.display = 'flex';\n\n    var response = await fetch(url);\n    var cardsData = response.json();\n    \n    cardsData.then(cards => {\n      renderCards(cards, mainContainer);\n\n      localStorage.setItem('mainCards', JSON.stringify(cards));\n      resultsContainer.style.display = 'flex';\n      loader.style.display = 'none';\n    });\n  }    \n\n  favoriteBtn.addEventListener('click', () => {\n    mainContainer.style.display = 'none';\n    favoritesContainer.style.display = 'flex';\n    mainNavigation.style.display = 'none';\n    favoriteNavigation.style.display = 'flex';\n\n    var favoriteCards = localStorage.getItem('favoriteCards') !== null ? JSON.parse(localStorage.getItem('favoriteCards')) : [];\n\n    renderCards(favoriteCards, favoritesContainer);\n  });\n\n  backBtn.addEventListener('click', () => {\n    mainContainer.style.display = 'flex';\n    favoritesContainer.style.display = 'none';\n    mainNavigation.style.display = 'flex';\n    favoriteNavigation.style.display = 'none';\n  });\n\n  loadMoreBtn.addEventListener('click', async() => {\n    await getPhotosFromAPI();\n  });\n});\n\n\n//# sourceURL=webpack://nasa-ok/./script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./script.js"]();
/******/ 	
/******/ })()
;